#include<iostream>


using namespace std;

void task14240();
void task13609();
void task13582();
void task13501();
void task13474();
void task11254();
void task7386();
void task6015();
void task5821();
void task3650();

int main() {

    task13501();

	return 0;
}

// Дан массив, содержащий 2018 положительных целых чисел, не превышающих 10000. 
// Необходимо найти и вывести максимальный из тех элементов этого массива, десятичная и шестнадцатеричная запись которых
// заканчивается одним и тем же символом. Если таких чисел в массиве нет, ответ считается равным нулю.

void task14240() {
    int const N = 4;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    m = 0;
    for (i = 0; i < N; i++) 
        if ((a[i] > m) && ((a[i] % 16) == (a[i] % 10))) {
            m = a[i];
        }
    
    cout << " Max is " << m << endl;
}

// ?? Дан массив, содержащий 2017 положительных целых чисел, не превышающих 10000.
// Необходимо найти и вывести количество таких элементов этого массива, шестнадцатеричная запись которых
// содержит ровно два знака, причём последний из них – буква от A до F.


void task13609() {
    int const N = 5;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    k = 0;
    for (i = 0; i < N; ++i)
        if ((((a[i] > 15) && (a[i] < 256)) && (((a[i] % 16) > 9))) {
            k++;
        }
    cout << " Quantity is " << k << endl;
}

// Дан мас­сив, со­дер­жа­щий 2016 по­ло­жи­тель­ных целых чисел, не пре­вы­ша­ю­щих 1000.
// Не­об­хо­ди­мо найти и вы­ве­сти мак­си­маль­ный из тех эле­мен­тов этого мас­си­ва, шест­на­дца­те­рич­ная за­пись
// ко­то­рых за­кан­чи­ва­ет­ся сим­во­лом E.Если таких чисел в мас­си­ве нет, ответ счи­та­ет­ся рав­ным нулю.

void task13582() {
    int const N = 6;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    m = 0;
    for (i = 0; i < N; ++i)
        if ((a[i] > m) && ((a[i] % 16) == 14)) {
            m = a[i];
        }
    cout << "Max is " << m << endl;
}

// Дан мас­сив, со­дер­жа­щий 2016 по­ло­жи­тель­ных целых чисел, не пре­вы­ша­ю­щих 1000.
// Не­об­хо­ди­мо найти и вы­ве­сти мак­си­маль­ный из тех эле­мен­тов этого мас­си­ва, шест­на­дца­те­рич­ная за­пись ко­то­рых со­дер­жит ровно 2 цифры.

void task13501() {
    int const N = 7;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    k = 0;
    m = 0;
    for (i = 0; i < N; ++i)
        if (((a[i] > 15) && (a[i] < 256)) && (a[i] > m)) {
            m = a[i];
        }
    cout << " Max is " << k << endl;
}

// Дан массив, содержащий 2017 положительных целых чисел, не превышающих 1000.
// Необходимо найти и вывести максимальный из тех элементов этого массива, шестнадцатеричная 
// запись которых содержит не менее трёх цифр и оканчивается цифрой 3.

void task13474() {
    int const N = 7;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    k = 0;
    m = 0;
    for (i = 0; i < N; ++i)
        if (((a[i] > 255) && (a[i] < 4096 )) && (a[i] > m) && ((a[i] % 16) == 0)) {
            m = a[i];
        }
    cout << " Max is " << k << endl;
}

// Дан массив, содержащий 2016 положительных целых чисел, не превышающих 1000.
// Необходимо найти и вывести максимальный из тех элементов этого массива,
// чётность которых совпадает с чётностью произведения всех элементов.

void task11254() {
    int const N = 7;
    int a[N];
    int i, m, k;
    for (i = 0; i < N; i++)
        cin >> a[i];
    m = 0;
    k = 1;
    for (i = 0; i < N; ++i)
        k *= a[i];
    for (i = 0; i < N; ++i)
        if ((a[i] > m) && ((a[i] % 2) == (k % 2)) {
            m = a[i];
        }
    cout << "Max is " << m << endl; 
}

// Дан целочисленный массив из 30 элементов.Элементы массива могут принимать значения
// от 150 до 200 – рост учащихся выпускного класса.В команду по автогонкам входят все учащиеся,
// чей рост не более 175 см.Гарантируется, что такие учащиеся в классе есть.
// Опишите на русском языке или на одном из языков программирования алгоритм, который находит
// и выводит рост самого высокого участника гоночной команды.

void task7386() {
    int const N = 7;
    int a[N];
    int i, j, max;
    for (i = 0; i < N; i++)
        cin >> a[i];
    max = 150;
    for (i = 0; i < N; i++)
        if ((a[i] > max) && (a[i] <= 175)) {
            max = a[i];
        }
    cout << " Max is " << max << endl;
}

// Дан целочисленный массив из 20 элементов. Элементы массива могут принимать целые значения от 0 до 10000 включительно.
// Опишите на естественном языке или на одном из языков программирования алгоритм,позволяющий найти и вывести
// максимальное значение среди трёхзначных элементов массива, не делящихся на 9.
// Если в исходном массиве нет элемента, значение которого является трёхзначным числом
// и при этом не кратно 9, то выведите сообщение «Не найдено».


void task6015() {
    int const N = 7;
    int a[N];
    int i, j, max;
    for (i = 0; i < N; i++)
        cin >> a[i];
    max = 0;
    for (i = 0; i < N; ++i)
        if ((a[i] > max) && (a[i] < 1000) && (a[i] > 99) && ((a[i] % 9) != 0)) {
            max = a[i];
        }
    if (max > 0) {
        cout << "Max is " << max << endl;
    }
    else {
        cout << " Не найдено " << endl;
    }
}
        
// Дан целочисленный массив из 20 элементов. Элементы массива могут принимать целые значения от 0 до 10000 включительно.
// Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести
// максимальное значение среди элементов массива, которые имеют чётное значение и являются трёхзначными.
//Если в исходном массиве нет элемента, значение которого является чётным трёхзначным числом, то вывести сообщение «Не найдено».

void task5821() {
    int const N = 7;
    int a[N];
    int i, j, max;
    for (i = 0; i < N; i++)
        cin >> a[i];
    max = 0;
    for (i = 0; i < N; ++i)
        if ((a[i] > max) && (a[i] < 1000) && (a[i] > 99) && ((a[i] % 2) == 0)) {
            max = a[i];
        }
    if (max > 0) {
        cout << "Max is " << max << endl;
    }
    else {
        cout << " Не найдено " << endl;
    }
}

// Дан целочисленный массив из 30 элементов. Элементы массива могут принимать значения от -20 до 20
// сведения о температуре за каждый день ноября. Опишите на русском языке или на одном из языков программирования алгоритм,
// который находит и выводит максимальную температуру среди дней, когда были заморозки
// (то есть температура опускалась ниже нуля). Гарантируется, что хотя бы в один день ноября была отрицательная температура.

void task3650() {
    int const N = 7;
    int a[N];
    int i, j, max;
    for (i = 0; i < N; i++)
        cin >> a[i];
    max = -20;
    for (i = 0; i < N; ++i)
        if ((a[i] < 0) && (a[i] > max)) {
            max = a[i];
        }
    cout << "Max is " << max << endl;
}

// Дан целочисленный массив из 40 элементов. Элементы массива могут принимать произвольные значения.
// Опишите на русском языке или на одном из языков программирования алгоритм, который находит и выводит
// значение второго максимума (элемента, который в отсортированном по невозрастанию массиве стоял бы вторым).

void task3614() {
    int const N = 7;
    int a[N];
    int i, k, max, max2;
    for (i = 0; i < N; i++)
        cin >> a[i];
    max = INT_ MIN;
    max2 = INT_ MIN;
    for (i = 0; i < N; i++) {
        if (a[i] > max) {
            max = a[i];
        }
        if ((a[i] > max2) && (a[i] < max)) {
            max2 = a[i];
        }
    }
    cout << "Second max is " << max2 << endl;
}