#include<iostream>

using namespace std;

void task27_9708();
void task27_13373();
void task27_13754();
void task27_15643();
void task27_15867();
void task27_18096();
void task27_18455();


int main() {
	setlocale(LC_ALL, "Russian");
	
	task27_18455();

	return 0;

}

// Number 27:
/*
Последовательность натуральных чисел характеризуется числом Х — наибольшим числом,
кратным 14 и являющимся произведением двух элементов последовательности с различными номерами.
На вход программе в первой строке подаётся количество чисел N. В каждой из последующих N строк
записано одно натуральное число, не превышающее 1000.
*/

void task27_9708() {
	int number, n14, n7, n2, max, size, pr;
	cin >> size;
	n14 = 0;
	n7 = 0;
	n2 = 0;
	max = 0;
	pr = 1;
	for (int i = 0; i < size; ++i) {
		cin >> number;
		if (number % 7 == 0 && number % 14 != 0 && number > n7) {
			n7 = number;
		}
		else if (number % 2 == 0 && number % 14 != 0 && number > n2) {
			n2 = number;
		}
		else if (number % 14 == 0 && number > n14) {
			n14 = number;
		}
		else if (number > max && number % 14 != 0) {
			max = number;
		}
	}
	if (n2 * n7 > pr) {
		pr = n2 * n7;
	}
	if (n2 * n14 > pr) {
		pr = n2 * n14;
	}
	if (n7 * n14 > pr) {
		pr = n7 * n14;
	}
	if (n14 * max > pr) {
		pr = n14 * max;
	}
	if (pr == 1) {
		cout << "Число X не найдено" << endl;
	}
	else {
		cout << pr << endl;
	}
}

/*На спутнике «Восход» установлен прибор, предназначенный для измерения солнечной активности. 
В течение времени эксперимента (это время известно заранее) прибор каждую минуту передаёт в обсерваторию
по каналу связи положительное целое число, не превышающее 1000, — количество энергии солнечного излучения,
полученной за последнюю минуту, измеренное в условных единицах.
После окончания эксперимента передаётся контрольное значение — наибольшее число R, удовлетворяющее следующим условиям:
1) R — произведение двух чисел, переданных в разные минуты;
2) R делится на 26.
Предполагается, что удовлетворяющее условиям контрольное значение существовало в момент передачи.
*/

void task27_13373() {
	int number, n26, n13, n2, max, size, pr;
	cin >> size;
	n26 = 0;
	n13 = 0;
	n2 = 0;
	max = 0;
	pr = 1;
	for (int i = 0; i < size; ++i) {
		cin >> number;
		if (number % 13 == 0 && number % 26 != 0 && number > n13) {
			n13 = number;
		}
		else if (number % 2 == 0 && number % 26 != 0 && number > n2) {
			n2 = number;
		}
		else if (number % 26 == 0 && number > n26) {
			n26 = number;
		}
		else if (number > max&& number % 26 != 0) {
			max = number;
		}
	}
	if (n2 * n13 > pr) {
		pr = n2 * n13;
	}
	if (n2 * n26 > pr) {
		pr = n2 * n26;
	}
	if (n13 * n26 > pr) {
		pr = n13 * n26;
	}
	if (n26 * max > pr) {
		pr = n26 * max;
	}
	if (pr == 1) {
		cout << "Конроль не пройден" << endl;
	}
	else {
		cout << "Вычисленное контрольное значение: " << pr << endl;
		cout << "Контроль пройден" << endl;
	}
}

/*
На вход программы поступает последовательность из N целых положительных чисел,
все числа в последовательности различны. Рассматриваются все пары различных элементов
последовательности (элементы пары не обязаны стоять в последовательности рядом, порядок
элементов в паре не важен). Необходимо определить количество пар, для которых произведение
элементов делится на 26.
Описание входных и выходных данных
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000).
В каждой из последующих N строк записано одно целое положительное число,
не превышающее 10 000. В качестве результата программа должна напечатать одно число:
количество пар, в которых произведение элементов кратно 26.
*/

void task27_13754() {
	int n26, n13, n2, size, kol, number;
	cin >> size;
	n26 = 0;
	n13 = 0;
	n2 = 0;
	kol = 0;
	for (int i = 0; i < size; i++) {
		cin >> number;
		if (number % 13 == 0 && number % 26 != 0) {
			n13++;
		}
		else if (number % 2 == 0 && number % 26 != 0) {
			n2++;
		}
		else if (number % 26 == 0) {
			n26++;
		}
	}
	kol = n26 * (size - n26) / 2 + n26 * (n26 - 1) / 2 + n13 * n2 ;
	cout << kol << endl;
}

/*
На вход программы поступает последовательность из N целых положительных чисел,
все числа в последовательности различны. Рассматриваются все пары различных
элементов последовательности (элементы пары не обязаны стоять в последовательности
рядом, порядок элементов в паре не важен). Необходимо определить количество пар,
для которых произведение элементов не делится на 34.
Описание входных и выходных данных:
В первой строке входных данных задаётся количество
чисел N (1 ≤ N ≤ 1000). В каждой из последующих N строк
записано одно целое положительное число, не превышающее 10 000.
В качестве результата программа должна напечатать одно число: 
количество пар, в которых произведение элементов не кратно 34.
*/

void task27_15643() {
	int n17, n2, notn, number, size, kol;
	cin >> size;
	n17 = 0;
	n2 = 0;
	notn = 0;
	kol = 0;
	for (int i = 0; i < size; i++) {
		cin >> number;
		if (number % 17 == 0 && number % 34 != 0) {
			n17++;
		}
		else if (number % 2 == 0 && number % 34 != 0) {
			n2++;
		}
		
		else if (number % 34 != 0 && number % 17 != 0 && number % 2 != 0) {
			notn++;
		}
	}
	kol = n17 * (size - n17) / 2 + n2 * (size - n2) / 2 + notn * (size - notn) / 2;
	cout << kol << endl;
}

/*
На вход программы поступает последовательность из N целых положительных чисел,
все числа в последовательности различны. Рассматриваются все пары различных
элементов последовательности (элементы пары не обязаны стоять в последовательности
рядом, порядок элементов в паре не важен). Необходимо определить количество пар,
для которых произведение элементов не кратно 14.
Описание входных и выходных данных
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000).
В каждой из последующих N строк записано одно целое положительное число, 
не превышающее 1000. В качестве результата программа должна напечатать одно число:
количество пар, в которых произведение элементов не кратно 14.
*/

void task27_15867() {
	int number, n7, n2, notn, size, kol;
	n7 = 0;
	n2 = 0;
	notn = 0;
	kol = 0;
	cin >> size;
	for (int i = 0; i < size; i++) {
		cin >> number;
		if (number % 7 == 0 && number % 14 != 0) {
			n7++;
		}
		else if (number % 2 == 0 && number % 14 != 0) {
			n2++;
		}
		else if (number % 14 != 0 && number % 2 != 0 && number % 7 != 0) {
			notn++;
		}
	}
	kol = n7 * (size - n7) / 2 + n2 * (size - n2) / 2 + notn * (size - notn) / 2;
	cout << kol << endl;
}

/*
На вход программы поступает последовательность из N целых положительных чисел,
все числа в последовательности различны. Рассматриваются все пары различных элементов
последовательности (элементы пары не обязаны стоять в последовательности рядом,
порядок элементов в паре неважен). Необходимо определить количество пар, для которых
произведение элементов кратно 62.
Описание входных и выходных данных.
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000).
В каждой из последующих N строк записано одно натуральное число,
не превышающее 10000. В качестве результата программа должна вывести одно число:
количество пар, в которых произведение элементов кратно 62.
*/

void task27_18096() {
	int number, n62, n31, n2, size, kol;
	n62 = 0;
	n31 = 0;
	n2 = 0;
	kol = 0;
	cin >> size;
	for (int i = 0; i < size; i++) {
		cin >> number;
		if (number % 31 == 0 && number % 62 != 0) {
			n31++;
		}
		else if (number % 2 == 0 && number % 62 != 0) {
			n2++;
		}
		else if (number % 62 == 0) {
			n62++;
		}
	}
	kol = n62 * (size - n62) / 2 + n31 * n2 + n62 * (n62 - 1) / 2;
	cout << kol << endl;
}

/*
ание 27 № 18455
На вход программы поступает последовательность из N целых положительных чисел,
все числа в последовательности различны. Рассматриваются все пары различных
элементов последовательности (элементы пары могут быть расположены
в последовательности не рядом, порядок элементов в паре неважен).
Необходимо определить количество пар, для которых произведение
элементов делится без остатка на 10.
Описание входных и выходных данных.
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000).
В каждой из последующих N строк записано одно целое положительное число,
не превышающее 10 000.
В качестве результата программа должна напечатать одно число:
количество пар, в которых произведение элементов кратно 10.
*/

void task27_18455() {
	int number, n2, n5, n10, size, kol;
	kol = 0;
	n2 = 0;
	n5 = 0;
	n10 = 0;
	cin >> size;
	for (int i = 0; i < size; i++) {
		cin >> number;
		if (number % 5 == 0 && number % 10 != 0) {
			n5++;
		}
		else if (number % 2 == 0 && number % 10 != 0) {
			n2++;
		}
		else if (number % 10 == 0) {
			n10++;
		}
	}
	kol = n10 * (n10 - 1) / 2 + n10 * (size - n10) / 2 + n5 * n2;
	cout << kol << endl;
}