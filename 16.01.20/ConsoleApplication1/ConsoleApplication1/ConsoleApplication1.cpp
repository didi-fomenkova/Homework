#include <iostream>
#include <cmath>

using namespace std;

void task7709();
void task7770();
void task8113();
void task13371();
void task11361();
void task11330();
void task11126();
void task8673();
void taskUnknown();


int main() {
	
	//task8673();
	taskUnknown();

		return 0;
}

// Дан целочисленный массив из 20 элементов. Элементы массива могут принимать целые значения от –10 000 до 10 000 включительно.
//Опишите на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар элементов массива, в которых
//сумма элементов делится на 3, но не делится на 9. В данной задаче под парой подразумеваются два соседних элемента массива.

void task7709() {
	int const N = 20;
	int a[N];
	int i, k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if ((((a[i] + a[i - 1]) % 3) == 0) && (((a[i] + a[i - 1]) % 9) != 0)) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
} 
//Дан целочисленный массив из 40 элементов. Элементы массива могут принимать целые значения от –100 до 100 включительно.
//Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар
//элементов массива, произведение которых положительно, а сумма кратна 7.

void task7770() {
	int const N = 40;
	long a[N];
	long i, k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if ((((a[i] * a[i - 1]) > 0) && ((a[i] + a[i - 1]) % 7) == 0)) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
}
 //Дан целочисленный массив из 20 элементов. Элементы массива могут принимать целые значения от –10 000 до 10 000 включительно.
//Опишите на естественном языке или на одном из языков программирования алгоритм,позволяющий найти и вывести количество пар 
//элементов массива, в которых оба числа делятся на 3. В данной задаче под парой подразумевается два подряд идущих элемента массива.
void task8113() {
	int  const N = 20;
	int a[N];
	int i, k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i=1; i < N; ++i)
		if (((a[i] % 3) == 0) && ((a[i - 1] % 3) == 0)) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;

}
//Дан целочисленный массив из 20 элементов. Элементы массива могут принимать целые значения от 0 до 10 000 включительно.
//Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар
//элементов массива, в которых оба числа являются чётными. 
void task13371() {
	int const N = 20;
	int a[N];
	int i,  k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if ((((a[i] % 2) == 0)) && (((a[i - 1] % 2) == 0))) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
}

//Дан целочисленный массив из 40 элементов. Элементы массива могут принимать целые значения от 0 до 10 000 включительно.
//Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар
//элементов массива, в которых десятичная запись хотя бы одного числа оканчивается на 2. 
void task11361() {
	int const N = 40;
	int a[N];
	int i, k;
	for (i = 0; i < N; i++)
	cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if (((a[i] % 10) == 2) || ((a[i - 1] % 10) == 2)) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
}

// Дается последовательность чисел. Нужно определить, сколько есть пар чисел, в которых есть хотя бы одно число, оканчивающееся на "3"
void task11330() {
	int const n = 6;
	int a[n];
	int par = 0;
	int i = 0;
	int k = 0;
	for (i = 0; i < n; ++i)
		cin >> a[i];
	for (i = 1; i < n; ++i)
	if (((a[i] % 10) == 3) || ((a[i - 1] % 10) == 3)) {
		k++;
	}
	cout << "The number of pairs of array elements " << k << endl;
}
//Дан целочисленный массив из 50 элементов. Элементы массива могут принимать целые значения от 0 до 10 000 включительно.
//Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар
//элементов массива, в которых оба числа двузначные. В данной задаче под парой подразумевается два подряд идущих элемента массива.
void task11126() {
	int const N = 50;
	int a[N];
	int i, k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if (((a[i] < 100) && (a[i] > 9)) && ((a[i - 1] < 100) && (a[i - 1] > 9))) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
}

// Дан целочисленный массив из 40 элементов. Элементы массива могут принимать целые значения от –100 до 100 включительно.
// Опишите на естественном языке или на одном из языков программирования алгоритм, позволяющий найти и вывести количество пар
// элементов массива, сумма которых чётна, а произведение больше 100.
void task8673() {
	int const N = 40;
	long a[N];
	long i, j, k;
	for (i = 0; i < N; i++)
		cin >> a[i];
	k = 0;
	for (i = 1; i < N; ++i)
		if ((((a[i] + a[i - 1]) % 2) == 0) && ((a[i] * a[i - 1]) > 100)) {
			k++;
		}
	cout << "The number of pairs of array elements " << k << endl;
}

//??Дан массив, содержащий 2014 вещественных чисел. Напишите на одном из языков программирования программу,
//??находящую в этом массиве два соседних элемента, значения которых наименее близки,то есть абсолютная величина их разности максимальна. 
//??Если таких пар несколько, можно взять любую из них. Программа должна вывести найденные элементы. 
void taskUnknown()
{
	int const N = 6;
	long a[N];
	long i, j, k;
	for (i = 0; i < N; i++)
		cin >> a[i];

	k = 0;
	j = -1;

	for (i = 0; i < N - 1; ++i)	{
		if (abs(a[i] - a[i + 1]) > k) {
			k = abs(a[i] - a[i + 1]);
			j = i;
		}
	}

	cout << a[j] << " " << a[j + 1] << endl;
}
